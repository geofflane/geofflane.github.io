<p>For much of the web's history <a href="http://en.wikipedia.org/wiki/Javascript">JavaScript</a> has been the domain of the  web designer who was often not a skilled programmer. So JavaScript was often a messy endeavor and did not follow a lot of the tenets of good software development. What has been missed this whole time is that JavaScript is a really interesting and powerful language. It shares many things that I like so much about Ruby. It has <a href="http://jibbering.com/faq/faq_notes/closures.html">closures</a> and prototyping (the ability to add methods to Objects at runtime). It is a highly dynamic language that can do a lot.</p>
<p>The rising popularity of AJAX and rich-client web applications and the power that they can provide to offer very good user experience have led to interest by the hard-core development community. This interest has led to the development of a number of frameworks for client-side JavaScript development. These frameworks aim to handle the plumbing of JavaScript including handling the incompatibilities across various browsers. These toolkits lower the barrier of entry to building interesting, dynamic web applications.</p>
<h3>Toolkits</h3></p>
<h4>Prototype</h4>
Ruby on Rails comes with a JavaScript toolkit called <a href="http://prototype.conio.net/">Prototype</a>. Prototype has added a lot of Ruby-like constructs onto JavaScript that makes it a lot more natural to Ruby programmers to use. Adding onto Prototype is the <a href="http://script.aculo.us/">Scriptaculous</a> library. Scriptaculous adds interesting visual effects to the core Prototype toolkit.</p>
<p>While these are the toolkits of choice for Ruby on Rails, there is nothing that will prevent you from using them in any web application, no matter what the underlying server-side technology.</p>
<p>There is a great <a href="http://www.sergiopereira.com/articles/prototype.js.html">Prototype Reference</a> available to get you started.</p>
<h4>Dojo</h4>
Where Prototype is built like Ruby, <a href="http://www.dojotoolkit.org/">Dojo</a> is "just JavaScript". They do not try and change the core language in any way that is not natural JavaScript. They also have taken a very good software engineering perspective on the system including a suite of unit tests and a build system. Dojo has a complete AJAX abstraction, visual effects and a very cool event mechanism. Dojo also has the concept of Widgets that allows you to build reusable components. It seems like it has a lot of potential.</p>
<p><a href="http://tacos.sourceforge.net/">Tacos</a> is a blending of the Dojo toolkit with the Tapestry framework allowing Tapestry to do AJAX.</p>
<h4>Other Toolkits</h4>
Prototype and Dojo seem to be the most interesting toolkits to me, but there are a number of others available:
<a href="http://www.mochikit.com/">MochiKit</a>
<a href="http://developer.yahoo.com/yui/index.html">Yahoo! UI Toolkit</a>
<a href="http://www.zimbra.com/community/open_ajax.html">Zimbra</a>
<a href="http://trimpath.com/project/wiki/TrimJunction">TrimJunction</a></p>
<h3>Development Tools</h3>
Client side development has lacked many of the tools that serious developers are used to for "regular" development. This is probably one of the many reasons that <em>hard-core</em> programmers have snubbed their noses as client side development. Well, yet another excuse has been removed.</p>
<p>Syntax highlighting and code completion are available in a number of IDEs these days including <a href="http://www.jetbrains.com/idea/features/javascript.html">Intellij IDEA</a> and <a href="http://www.interaktonline.com/Products/Eclipse/JSEclipse/Overview/">Eclipse</a>.</p>
<p>There are interesting debugging tools for both Firefox and Internet Explorer that allow you to easily debug problems in each browser. In addition to the Javascript console in Firefox and <a href="http://www.mozilla.org/projects/venkman/">Venkman</a> some other handy tools are available.</p>
<p><a href="http://www.joehewitt.com/software/firebug/">Firebug</a> is a really nice Firefox plugin.
<a href="http://blogs.msdn.com/ie/archive/2004/10/26/247912.aspx">IE Script Debugger</a> is available for the same task in Internet Explorer.</p>
<h3>Other References</h3>
<a href="http://www.javascriptkit.com/">JavaScript Kit</a> offers some really good documentation and tutorials. It includes some interesting in-depth discussion of some discussion of creating <a href="http://www.javascriptkit.com/javatutors/oopjs.shtml">Object Oriented</a> constructs in JavaScript.</p>
